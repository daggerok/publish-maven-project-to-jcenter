<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <developers>
        <developer>
            <name>Maksim Kostromin</name>
            <email>daggerok@gmail.com</email>
        </developer>
    </developers>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.daggerok.publish.maven.project.to.jcenter</groupId>
    <artifactId>publish-maven-project-to-jcenter</artifactId>
    <version>1.0.5-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>api</module>
        <module>library</module>
        <module>app</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

        <log4j.version>2.12.1</log4j.version>
        <lombok.version>1.18.8</lombok.version>
        <capsule-maven-plugin.version>1.5.1</capsule-maven-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <github-release-plugin.version>1.3.0</github-release-plugin.version>
        <maven-scm-publish-plugin.version>3.0.0</maven-scm-publish-plugin.version>
    </properties>

    <scm>
        <developerConnection>scm:git:git@github.com:daggerok/publish-maven-project-to-jcenter.git</developerConnection>
        <connection>scm:git:https://github.com/daggerok/publish-maven-project-to-jcenter.git</connection>
        <url>https://github.com/daggerok/publish-maven-project-to-jcenter.git</url>
        <!--<tag>HEAD</tag>-->
        <tag>master</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.daggerok.publish.maven.project.to.jcenter</groupId>
                <artifactId>api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.daggerok.publish.maven.project.to.jcenter</groupId>
                <artifactId>library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.daggerok.publish.maven.project.to.jcenter</groupId>
                <artifactId>app</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <!--<repository>
            <id>bintray-[YOUR_USERNAME]-[REPOSITORY_NAME]</id>
            <name>[YOUR_USERNAME]-[REPOSITORY_NAME]</name>
            <url>https://api.bintray.com/maven/[YOUR_USERNAME]/[REPOSITORY_NAME]/[PACKAGE_NAME]/;publish=1</url>
        </repository>-->
        <repository>
            <id>bintray-daggerok-daggerok</id>
            <name>daggerok-daggerok</name>
            <url>https://api.bintray.com/maven/daggerok/daggerok/publish-maven-project-to-jcenter//;publish=1</url>
        </repository>
    </distributionManagement>

    <build>
        <defaultGoal>clean package</defaultGoal>
    </build>

    <profiles>
        <profile>
            <id>publish-locally</id>
            <build>
                <!-- ./mvnw -P publish-locally -->
                <defaultGoal>clean deploy</defaultGoal>
            </build>
            <distributionManagement>
                <repository>
                    <id>local-maven-repo</id>
                    <url>file://${maven.multiModuleProjectDirectory}/target/.m2/repository</url>
                </repository>
            </distributionManagement>
        </profile>

        <profile>
            <id>maven-release-locally</id>
            <build>
                <!--
                ./mvnw -Dresume=false release:prepare release:perform -Darguments="-Dmaven.deploy.skip=true" -Pmaven-release-locally,publish-locally -DgenerateBackupPoms=false -DskipTests -B -s ./settings.xml
                -->
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>${maven-release-plugin.version}</version>
                        <configuration>
                            <arguments>-DskipTests -Dmaven.deploy.skip=true -Ppublish-locally</arguments>
                            <!--<arguments>-DskipTests -Dmaven.deploy.skip=true</arguments>-->
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                            <generateReleasePoms>false</generateReleasePoms>
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                            <tagNameFormat>@{project.version}</tagNameFormat>
                            <releaseProfiles>local-maven-repo</releaseProfiles>
                            <preparationGoals>clean</preparationGoals>
                            <completionGoals>clean</completionGoals>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>maven-release-locally</id>
            <build>
                <!--
                ./mvnw -Dresume=false -DdryRun=true release:prepare
                ./mvnw -Dresume=false release:prepare release:perform
                -->
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>${maven-release-plugin.version}</version>
                        <configuration>
                            <arguments>-DskipTests -Dmaven.deploy.skip=true -Ppublish-locally</arguments>
                            <!--<arguments>-DskipTests -Dmaven.deploy.skip=true</arguments>-->
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                            <generateReleasePoms>false</generateReleasePoms>
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                            <tagNameFormat>@{project.version}</tagNameFormat>
                            <releaseProfiles>local-maven-repo</releaseProfiles>
                            <preparationGoals>clean</preparationGoals>
                            <completionGoals>clean</completionGoals>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>publish-to-github</id>
            <build>
                <!--
                ./mvnw clean
                ./mvnw -P publish-locally
                ./mvnw -P publish-to-github -pl :publish-maven-project-to-jcenter
                -->
                <defaultGoal>scm-publish:publish-scm</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-publish-plugin</artifactId>
                        <version>${maven-scm-publish-plugin.version}</version>
                        <configuration>
                            <content>${maven.multiModuleProjectDirectory}/target/.m2/repository/</content>
                            <!--<includes>**/*.*</includes>-->
                            <scmBranch>maven</scmBranch>
                            <tryUpdate>true</tryUpdate>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
                <site>
                    <id>daggerok-github</id>
                    <url>${project.scm.developerConnection}</url>
                </site>
            </distributionManagement>
        </profile>

        <profile>
            <id>upload-github-release</id>
            <build>
                <!--
                release maven artifacts (mvn deploy -P publish-locally) from target/.m2/repository to github repo
                ./mvnw clean package
                ./mvnw -P upload-github-release -pl :publish-maven-project-to-jcenter
                -->
                <defaultGoal>de.jutzig:github-release-plugin:1.1.1:release</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>de.jutzig</groupId>
                        <artifactId>github-release-plugin</artifactId>
                        <version>${github-release-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>release</id>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <overwriteArtifact>true</overwriteArtifact>
                            <description>${project.artifactId} release</description>
                            <releaseName>v${project.version}</releaseName>
                            <tag>${project.version}</tag>
                            <fileSets>
                                <fileSet>
                                    <directory>${maven.multiModuleProjectDirectory}</directory>
                                    <includes>
                                        <include>*.md</include>
                                    </includes>
                                </fileSet>
                                <fileSet>
                                    <directory>${maven.multiModuleProjectDirectory}/app/target</directory>
                                    <includes>
                                        <include>*-all.jar</include>
                                    </includes>
                                </fileSet>
                                <!--
                                <fileSet>
                                  <directory>${maven.multiModuleProjectDirectory}/target/.m2/repository</directory>
                                  <includes>
                                    <include>**/*.jar*</include>
                                    <include>**/*.pom*</include>
                                  </includes>
                                </fileSet>
                                -->
                            </fileSets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
